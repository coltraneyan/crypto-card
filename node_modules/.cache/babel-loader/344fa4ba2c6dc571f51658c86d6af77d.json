{"ast":null,"code":"var _jsxFileName = \"/Users/coltraneyan/repos/reptile/src/App.js\";\nimport \"./App.css\";\nimport React from \"react\";\nimport { Editor, EditorState, RichUtils } from \"draft-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MyEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editorState: EditorState.createEmpty()\n    };\n\n    this.onChange = editorState => this.setState({\n      editorState\n    });\n\n    this.handleKeyCommand = this.handleKeyCommand.bind(this);\n  }\n\n  handleKeyCommand(command, editorState) {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n\n    if (newState) {\n      this.onChange(newState);\n      return \"handled\";\n    }\n\n    return \"not-handled\";\n  }\n\n  _onBoldClick() {\n    this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, \"BOLD\"));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"show\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this._onBoldClick.bind(this),\n        children: \"Bold\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"show\",\n        children: /*#__PURE__*/_jsxDEV(Editor, {\n          editorState: this.state.editorState,\n          handleKeyCommand: this.handleKeyCommand,\n          onChange: this.onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MyEditor;","map":{"version":3,"sources":["/Users/coltraneyan/repos/reptile/src/App.js"],"names":["React","Editor","EditorState","RichUtils","MyEditor","Component","constructor","props","state","editorState","createEmpty","onChange","setState","handleKeyCommand","bind","command","newState","_onBoldClick","toggleInlineStyle","render"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,SAA9B,QAA+C,UAA/C;;;AAEA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,WAAW,EAAEP,WAAW,CAACQ,WAAZ;AAAf,KAAb;;AACA,SAAKC,QAAL,GAAiBF,WAAD,IAAiB,KAAKG,QAAL,CAAc;AAAEH,MAAAA;AAAF,KAAd,CAAjC;;AACA,SAAKI,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;AAEDD,EAAAA,gBAAgB,CAACE,OAAD,EAAUN,WAAV,EAAuB;AACrC,UAAMO,QAAQ,GAAGb,SAAS,CAACU,gBAAV,CAA2BJ,WAA3B,EAAwCM,OAAxC,CAAjB;;AAEA,QAAIC,QAAJ,EAAc;AACZ,WAAKL,QAAL,CAAcK,QAAd;AACA,aAAO,SAAP;AACD;;AAED,WAAO,aAAP;AACD;;AAEDC,EAAAA,YAAY,GAAG;AACb,SAAKN,QAAL,CAAcR,SAAS,CAACe,iBAAV,CAA4B,KAAKV,KAAL,CAAWC,WAAvC,EAAoD,MAApD,CAAd;AACD;;AAEDU,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,KAAKF,YAAL,CAAkBH,IAAlB,CAAuB,IAAvB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,WAAW,EAAE,KAAKN,KAAL,CAAWC,WAD1B;AAEE,UAAA,gBAAgB,EAAE,KAAKI,gBAFzB;AAGE,UAAA,QAAQ,EAAE,KAAKF;AAHjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AApCoC;;AAuCvC,eAAeP,QAAf","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\nimport { Editor, EditorState, RichUtils } from \"draft-js\";\n\nclass MyEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { editorState: EditorState.createEmpty() };\n    this.onChange = (editorState) => this.setState({ editorState });\n    this.handleKeyCommand = this.handleKeyCommand.bind(this);\n  }\n\n  handleKeyCommand(command, editorState) {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n\n    if (newState) {\n      this.onChange(newState);\n      return \"handled\";\n    }\n\n    return \"not-handled\";\n  }\n\n  _onBoldClick() {\n    this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, \"BOLD\"));\n  }\n\n  render() {\n    return (\n      <div className=\"show\">\n        <button onClick={this._onBoldClick.bind(this)}>Bold</button>\n        <div className=\"show\">\n          <Editor\n            editorState={this.state.editorState}\n            handleKeyCommand={this.handleKeyCommand}\n            onChange={this.onChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MyEditor;\n"]},"metadata":{},"sourceType":"module"}